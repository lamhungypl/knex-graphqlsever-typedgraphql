type Query {
  books: [Book!]!
  book: Book!
  users: [User!]!
}

type Book {
  title: String!
  author: String!
}

type User {
  user_id: ID!
  username: String
  email: String
  created_at: String
  updated_at: String
}

type Mutation {
  login(payload: LoginInput!): AuthResponse!
  register(payload: RegisterInput!): User!
  addUser(input: RegisterInput!): User!
  updateUser(payload: UpdateInput!, userId: String!): User!
  deleteUser(userId: String!): User!
}

type AuthResponse {
  token: String!
  user: User!
}

input LoginInput {
  username: String!
  password: String!
}

input RegisterInput {
  username: String
  password: String
  email: String
}

input UpdateInput {
  user_id: String
  username: String
  email: String
}
